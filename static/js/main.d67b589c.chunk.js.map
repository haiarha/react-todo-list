{"version":3,"sources":["components/Header.js","components/TodoForm.js","components/TodoItem/TodoItem.jsx","components/TodoList.js","hooks/useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["Header","text","className","TodoForm","onSave","useState","value","setValue","onSubmit","e","preventDefault","TextField","label","margin","variant","fullWidth","onChange","target","TodoItem","props","children","checked","onClick","onDelete","rest","ListItem","button","ListItemIcon","Checkbox","disableRipple","ListItemText","ListItemSecondaryAction","IconButton","TodoList","list","onDeleteItem","onCheck","sort","List","map","item","i","id","createTodoItem","useTodoState","initialState","setList","newId","reduce","res","index","filter","_","newList","undefined","splice","LS_TODO_KEY","initialTodoState","window","localStorage","JSON","parse","getItem","App","add","remove","setChecked","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d67b589c.chunk.js","sourcesContent":["function Header({ text = \"LOGO\" }) {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"logo\">{text}</div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useState } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction TodoForm({ onSave }) {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSave(value);\n        setValue(\"\");\n      }}\n    >\n      <TextField\n        label=\"Add todo\"\n        margin=\"normal\"\n        variant=\"filled\"\n        fullWidth\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      />\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction TodoItem(props) {\n  const {\n    children,\n\n    checked,\n    onClick,\n    onDelete,\n\n    ...rest\n  } = props;\n\n  return (\n    <ListItem {...rest} className=\"TodoItem\" button onClick={onClick}>\n      <ListItemIcon>\n        <Checkbox checked={checked} disableRipple />\n      </ListItemIcon>\n\n      <ListItemText>{children}</ListItemText>\n\n      <ListItemSecondaryAction>\n        <IconButton onClick={onDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default TodoItem;\n","import List from \"@material-ui/core/List\";\n\nimport TodoItem from './TodoItem'\n\nfunction TodoList({ list, onDeleteItem, onCheck, sort = false }) {\n  return (\n    <List>\n      {list.map((item, i) => (\n        <TodoItem\n          key={item.id}\n          checked={item.checked}\n          onClick={() => onCheck(i, !item.checked)}\n          onDelete={() => onDeleteItem(i)}\n        >\n          {item.text}\n        </TodoItem>\n      ))}\n    </List>\n  );\n}\n\nexport default TodoList;\n","import { useState } from \"react\";\n\nconst createTodoItem = (text, id, checked = false) => ({\n  id,\n  text,\n  checked,\n});\n\n/**\n * @param {*} initialState\n * @returns [list, add, remove, setChecked, setList]\n */\nfunction useTodoState(initialState) {\n  const [list, setList] = useState(initialState);\n\n  const add = (text) => {\n    const newId =\n      list.reduce((res, item) => (item.id > res ? item.id : res), 0) + 1;\n\n    setList([...list, createTodoItem(text, newId)]);\n  };\n\n  const remove = (index) => setList(list.filter((_, i) => i !== index));\n\n  const setChecked = (index, checked) => {\n    const newList = [...list];\n\n    const item = newList[index];\n\n    if (item === undefined) return;\n\n    newList.splice(index, 1, {\n      ...item,\n      checked,\n    });\n\n    setList(newList);\n  };\n\n  return [list, add, remove, setChecked, setList];\n}\n\nexport default useTodoState;\n","import Header from \"./components/Header\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nimport \"./App.css\";\nimport useTodoState from \"./hooks/useTodoState\";\nimport { useEffect } from \"react\";\n\nconst LS_TODO_KEY = \"todo-list\";\n\nlet initialTodoState = [];\nif (window.localStorage !== undefined) {\n  initialTodoState = JSON.parse(localStorage.getItem(LS_TODO_KEY) || \"[]\");\n}\n\nfunction App() {\n  const [list, add, remove, setChecked] = useTodoState(initialTodoState);\n\n  useEffect(() => {\n    if (list !== initialTodoState) {\n      localStorage.setItem(LS_TODO_KEY, JSON.stringify(list));\n    }\n  }, [list]);\n\n  return (\n    <div className=\"App\">\n      <Header text={\"todo list\"} />\n\n      <main>\n        <div className=\"container\">\n          <TodoForm onSave={add} />\n\n          <TodoList list={list} onDeleteItem={remove} onCheck={setChecked} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}