{"version":3,"sources":["state/todo.js","components/Header.js","components/TodoForm.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["iterationId","createTodoItem","text","id","checked","TodoState","initialState","onChange","forEach","item","useState","list","_setList","setList","data","add","todoItem","delete","index","filter","_","i","setChecked","newList","undefined","splice","Header","className","TodoForm","onSave","value","setValue","onSubmit","e","preventDefault","TextField","label","margin","variant","fullWidth","target","TodoList","onDeleteItem","onCheck","sort","List","map","ListItem","button","onClick","ListItemIcon","Checkbox","disableRipple","ListItemText","ListItemSecondaryAction","IconButton","LS_TODO_KEY","initialTodoState","window","localStorage","JSON","parse","getItem","App","todo","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1307f3a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nlet iterationId = 1;\n\nconst createTodoItem = (text) => ({\n  id: iterationId++,\n  text,\n  checked: false,\n});\n\nfunction TodoState(initialState, onChange = () => undefined) {\n  initialState.forEach((item) => {\n    if (item.id >= iterationId) iterationId = item.id + 1;\n  });\n\n  const [list, _setList] = useState(initialState);\n\n  const setList = (data) => {\n    _setList(data);\n\n    onChange(data);\n  };\n\n  return {\n    list,\n\n    add(text) {\n      const todoItem = createTodoItem(text);\n\n      setList([...list, todoItem]);\n    },\n\n    delete(index) {\n      setList(list.filter((_, i) => i !== index));\n    },\n\n    setChecked(index, checked) {\n      const newList = [...list];\n\n      const item = newList[index];\n\n      if (item === undefined) return;\n\n      newList.splice(index, 1, {\n        ...item,\n        checked,\n      });\n\n      setList(newList);\n    },\n  };\n}\n\nexport default TodoState;\n","function Header({ text = \"LOGO\" }) {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"logo\">{text}</div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useState } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction TodoForm({ onSave }) {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSave(value);\n        setValue(\"\");\n      }}\n    >\n      <TextField\n        label=\"Add todo\"\n        margin=\"normal\"\n        variant=\"filled\"\n        fullWidth\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      />\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction TodoList({ list, onDeleteItem, onCheck, sort = false }) {\n  return (\n    <List>\n      {list.map((item, i) => (\n        <ListItem\n          key={item.id}\n          button\n          onClick={() => {\n            onCheck(i, !item.checked);\n          }}\n        >\n          <ListItemIcon>\n            <Checkbox checked={item.checked} disableRipple />\n          </ListItemIcon>\n\n          <ListItemText>{item.text}</ListItemText>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              onClick={(e) => {\n                onDeleteItem(i);\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default TodoList;\n","import TodoState from \"./state/todo\";\n\nimport Header from \"./components/Header\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nimport \"./App.css\";\n\nconst LS_TODO_KEY = \"todo-list\";\n\nlet initialTodoState = []\nif (window.localStorage !== undefined) {\n  initialTodoState = JSON.parse(localStorage.getItem(LS_TODO_KEY) || \"[]\");\n}\n\nfunction App() {\n  const todo = TodoState(initialTodoState, (list) => {\n    localStorage.setItem(LS_TODO_KEY, JSON.stringify(list))\n  });\n\n  return (\n    <div className=\"App\">\n      <Header text={\"todo list\"} />\n\n      <main>\n        <div className=\"container\">\n          <TodoForm onSave={todo.add} />\n\n          <TodoList\n            list={todo.list}\n            onDeleteItem={todo.delete}\n            onCheck={todo.setChecked}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}